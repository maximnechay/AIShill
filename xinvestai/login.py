#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Twitter
–ó–∞–ø—É—Å–∫:
    AUTH_PATH=auth_account1 python login.py
    AUTH_PATH=auth_account2 python login.py
"""

import os
import ssl
import certifi
import asyncio
from playwright.async_api import async_playwright

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SSL
os.environ["SSL_CERT_FILE"] = certifi.where()


async def login_to_twitter():
    """–ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Twitter"""
    print("üîê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –í TWITTER")
    print("=" * 25)

    try:
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏
            auth_path = os.environ.get("AUTH_PATH", "auth")
            context = await p.chromium.launch_persistent_context(
                auth_path,
                # –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
                headless=False,  # –í–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä
                args=["--no-sandbox"],
            )

            page = await context.new_page()

            try:
                # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ —É–∂–µ
                print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
                await page.goto("https://x.com/home", timeout=15000)
                await asyncio.sleep(3)

                current_url = page.url
                nav_count = await page.locator("nav").count()

                if "home" in current_url and nav_count > 0:
                    print("‚úÖ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´!")
                    print("üéâ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞")
                    return True

                # –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—Ö–æ–¥—É
                print("‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—Ö–æ–¥—É...")
                await page.goto("https://x.com/i/flow/login", timeout=15000)
                await asyncio.sleep(3)

                print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
                print("1. –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω/email")
                print("2. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
                print("3. –ü—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (2FA, –∫–∞–ø—á–∞)")
                print("4. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
                print("5. –ù–ï –ó–ê–ö–†–´–í–ê–ô–¢–ï –±—Ä–∞—É–∑–µ—Ä!")
                print()

                # –ñ–¥–µ–º –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–π–¥–µ—Ç
                input("‚è∏ –ù–∞–∂–º–∏—Ç–µ Enter –ü–û–°–õ–ï –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç: ")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
                await page.goto("https://x.com/home", timeout=15000)
                await asyncio.sleep(3)

                final_url = page.url
                final_nav = await page.locator("nav").count()

                print(f"üìç –§–∏–Ω–∞–ª—å–Ω—ã–π URL: {final_url}")
                print(f"üß≠ Nav —ç–ª–µ–º–µ–Ω—Ç—ã: {final_nav}")

                if "home" in final_url and final_nav > 0:
                    print("\n‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
                    print("üéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫")

                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç
                    try:
                        await page.goto("https://x.com/elonmusk", timeout=10000)
                        await asyncio.sleep(2)
                        articles = await page.locator("article").count()
                        if articles > 0:
                            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–∏–ª—è–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
                        else:
                            print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø—Ä–æ—Ñ–∏–ª—è–º")
                    except:
                        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–∏–ª—è–º")

                    return True
                else:
                    print("\n‚ùå –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨")
                    print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
                    return False

            except Exception as e:
                print(f"üí• –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
                return False
            finally:
                await context.close()

    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await login_to_twitter()

    if success:
        print("\nüöÄ –í–°–ï –ì–û–¢–û–í–û!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python botai.py")
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –µ—â–µ —Ä–∞–∑")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")


if __name__ == "__main__":
    print("üîê –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Twitter")
    asyncio.run(main())
