import os
import ssl
import certifi

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SSL
os.environ["SSL_CERT_FILE"] = certifi.where()

from playwright.sync_api import sync_playwright
import time


def record_actions():
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    print("üé¨ –ó–ê–ü–ò–°–¨ –î–ï–ô–°–¢–í–ò–ô –í –ë–†–ê–£–ó–ï–†–ï")
    print("=" * 40)
    print("üìù –í—Å–µ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å")
    print("üñ±Ô∏è –ö–ª–∏–∫–∞–π—Ç–µ, –≤–≤–æ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º")
    print("üõë –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ")
    print()

    with sync_playwright() as p:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –≤–∞—à–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        context = p.chromium.launch_persistent_context(
            "auth",  # –ü–∞–ø–∫–∞ —Å –≤–∞—à–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
            headless=False,  # –í–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä
            args=["--no-sandbox"],
        )

        page = context.pages[0] if context.pages else context.new_page()

        # –ó–ê–ü–ò–°–´–í–ê–ï–ú –í–°–ï –°–û–ë–´–¢–ò–Ø

        # –ö–ª–∏–∫–∏
        page.on("click", lambda: print(f"üñ±Ô∏è –ö–õ–ò–ö –Ω–∞ {page.url}"))

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        page.on("load", lambda: print(f"üåê –ó–ê–ì–†–£–ñ–ï–ù–ê –°–¢–†–ê–ù–ò–¶–ê: {page.url}"))
        page.on("domcontentloaded", lambda: print(f"üìÑ DOM –ó–ê–ì–†–£–ñ–ï–ù: {page.url}"))

        # –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
        def log_input(selector, text):
            print(f"‚å®Ô∏è –í–í–û–î –¢–ï–ö–°–¢–ê –≤ [{selector}]: '{text}'")

        # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥—ã –≤–≤–æ–¥–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        original_fill = page.fill
        original_type = page.type
        original_click = page.click
        original_goto = page.goto

        def logged_fill(selector, value, **kwargs):
            print(f"‚å®Ô∏è –ó–ê–ü–û–õ–ù–ï–ù–ò–ï [{selector}]: '{value}'")
            return original_fill(selector, value, **kwargs)

        def logged_type(selector, text, **kwargs):
            print(f"‚å®Ô∏è –ù–ê–ë–û–† –¢–ï–ö–°–¢–ê [{selector}]: '{text}'")
            return original_type(selector, text, **kwargs)

        def logged_click(selector, **kwargs):
            print(f"üñ±Ô∏è –ö–õ–ò–ö –ù–ê [{selector}]")
            return original_click(selector, **kwargs)

        def logged_goto(url, **kwargs):
            print(f"üåê –ü–ï–†–ï–•–û–î –ù–ê: {url}")
            return original_goto(url, **kwargs)

        # –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥—ã
        page.fill = logged_fill
        page.type = logged_type
        page.click = logged_click
        page.goto = logged_goto

        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥
        page.add_init_script(
            """
            let lastScrollTop = 0;
            window.addEventListener('scroll', () => {
                const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                if (Math.abs(scrollTop - lastScrollTop) > 100) {
                    console.log('üìú –°–ö–†–û–õ–õ –¥–æ –ø–æ–∑–∏—Ü–∏–∏:', scrollTop);
                    lastScrollTop = scrollTop;
                }
            });
        """
        )

        # –°–ª—É—à–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
        page.on(
            "console",
            lambda msg: (
                print(f"üñ•Ô∏è –ö–û–ù–°–û–õ–¨: {msg.text}") if "–°–ö–†–û–õ–õ" in msg.text else None
            ),
        )

        try:
            # –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            print("üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
            page.goto("https://x.com/home")
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø–∏—Å–∏!")
            print()
            print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
            print("1. –î–µ–ª–∞–π—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
            print("2. –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å")
            print("3. –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ")
            print()
            print("üé¨ –ù–ê–ß–ê–õ–û –ó–ê–ü–ò–°–ò:")
            print("-" * 40)

            # –ñ–¥–µ–º –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç
            while True:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç –ª–∏ –µ—â–µ –±—Ä–∞—É–∑–µ—Ä
                    page.url  # –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞
                    time.sleep(1)
                except:
                    break

        except KeyboardInterrupt:
            print("\nüõë –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}")
        finally:
            print("\nüèÅ –ö–û–ù–ï–¶ –ó–ê–ü–ò–°–ò")
            try:
                context.close()
            except:
                pass


def interactive_recorder():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    print("üé¨ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ó–ê–ü–ò–°–¨ –î–ï–ô–°–¢–í–ò–ô")
    print("=" * 40)

    with sync_playwright() as p:
        context = p.chromium.launch_persistent_context(
            "auth", headless=False, args=["--no-sandbox"]
        )

        page = context.pages[0] if context.pages else context.new_page()

        def log_element_info(selector):
            """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ"""
            try:
                element = page.locator(selector)
                if element.count() > 0:
                    text = element.first.inner_text()[:50]
                    print(f"üìã –≠–õ–ï–ú–ï–ù–¢ [{selector}] —Å–æ–¥–µ—Ä–∂–∏—Ç: '{text}...'")
                else:
                    print(f"‚ùå –≠–õ–ï–ú–ï–ù–¢ [{selector}] –Ω–µ –Ω–∞–π–¥–µ–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ: {e}")

        # –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        original_click = page.click
        original_fill = page.fill

        def enhanced_click(selector, **kwargs):
            print(f"\nüñ±Ô∏è –ö–õ–ò–ö –ù–ê: {selector}")
            log_element_info(selector)
            result = original_click(selector, **kwargs)
            print(f"‚úÖ –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            return result

        def enhanced_fill(selector, value, **kwargs):
            print(f"\n‚å®Ô∏è –ó–ê–ü–û–õ–ù–ï–ù–ò–ï: {selector}")
            print(f"üìù –ó–Ω–∞—á–µ–Ω–∏–µ: '{value}'")
            log_element_info(selector)
            result = original_fill(selector, value, **kwargs)
            print(f"‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
            return result

        page.click = enhanced_click
        page.fill = enhanced_fill

        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
        current_url = ""

        def check_url_change():
            nonlocal current_url
            new_url = page.url
            if new_url != current_url:
                print(f"\nüåê URL –ò–ó–ú–ï–ù–ï–ù: {new_url}")
                current_url = new_url

        try:
            page.goto("https://x.com/home")
            current_url = page.url

            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤!")
            print("\nüìã –ö–û–ú–ê–ù–î–´ –í –ö–û–ù–°–û–õ–ò:")
            print("- –í—Å–µ –∫–ª–∏–∫–∏ –∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            print("- URL –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è")
            print("- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–ª–µ–º–µ–Ω—Ç–∞—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏")
            print("\nüé¨ –ó–ê–ü–ò–°–¨ –ù–ê–ß–ê–õ–ê–°–¨:")
            print("-" * 50)

            while True:
                try:
                    check_url_change()
                    time.sleep(0.5)
                except:
                    break

        except KeyboardInterrupt:
            print("\nüõë –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}")
        finally:
            print("\nüèÅ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            try:
                context.close()
            except:
                pass


def element_inspector():
    """–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –ø—Ä–∏ –∫–ª–∏–∫–µ"""
    print("üîç –ò–ù–°–ü–ï–ö–¢–û–† –≠–õ–ï–ú–ï–ù–¢–û–í")
    print("=" * 30)
    print("üñ±Ô∏è –ö–ª–∏–∫–∞–π—Ç–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã - —É–≤–∏–¥–∏—Ç–µ –∏—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä—ã")

    with sync_playwright() as p:
        context = p.chromium.launch_persistent_context(
            "auth", headless=False, args=["--no-sandbox"]
        )

        page = context.pages[0] if context.pages else context.new_page()

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω—Å–ø–µ–∫—Ü–∏–∏
        page.add_init_script(
            """
            document.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                
                const element = e.target;
                const tagName = element.tagName.toLowerCase();
                const id = element.id ? `#${element.id}` : '';
                const className = element.className ? `.${element.className.replace(/\\s+/g, '.')}` : '';
                const testId = element.getAttribute('data-testid') ? `[data-testid="${element.getAttribute('data-testid')}"]` : '';
                
                let selector = tagName + id + className + testId;
                
                const text = element.innerText ? element.innerText.substring(0, 30) + '...' : '';
                
                console.log('üéØ –°–ï–õ–ï–ö–¢–û–†:', selector);
                console.log('üìù –¢–ï–ö–°–¢:', text);
                console.log('üè∑Ô∏è –¢–ï–ì:', tagName);
                if (testId) console.log('üîñ DATA-TESTID:', testId);
                console.log('---');
                
                return false;
            }, true);
        """
        )

        page.on("console", lambda msg: print(f"üîç {msg.text}"))

        try:
            page.goto("https://x.com/home")

            print("‚úÖ –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –≥–æ—Ç–æ–≤!")
            print("üñ±Ô∏è –ö–ª–∏–∫–∞–π—Ç–µ –Ω–∞ –ª—é–±—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã")
            print("üìã –°–µ–ª–µ–∫—Ç–æ—Ä—ã –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏")
            print()

            while True:
                try:
                    time.sleep(1)
                except:
                    break

        except KeyboardInterrupt:
            print("\nüõë –ò–Ω—Å–ø–µ–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        finally:
            try:
                context.close()
            except:
                pass


if __name__ == "__main__":
    print("üé¨ –í–´–ë–ï–†–ò–¢–ï –†–ï–ñ–ò–ú –ó–ê–ü–ò–°–ò:")
    print("1. –ü—Ä–æ—Å—Ç–∞—è –∑–∞–ø–∏—Å—å –¥–µ–π—Å—Ç–≤–∏–π")
    print("2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏")
    print("3. –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä—ã)")
    print("0. –í—ã—Ö–æ–¥")

    choice = input("\n–í—ã–±–æ—Ä [0-3]: ").strip()

    if choice == "1":
        record_actions()
    elif choice == "2":
        interactive_recorder()
    elif choice == "3":
        element_inspector()
    elif choice == "0":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
